//------------------------------------//
// Organize + Randomize stimuli
//------------------------------------//
/* Randomize array in-place using Durstenfeld shuffle algorithm */
function shuffle(array) {
  let currentIndex = array.length,  randomIndex;

  // While there remain elements to shuffle.
  while (currentIndex != 0) {

    // Pick a remaining element.
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex--;

    // And swap it with the current element.
    [array[currentIndex], array[randomIndex]] = [
      array[randomIndex], array[currentIndex]];
  }

  return array;
}


//------------------------------------//
// Randomize Assessment stimuli
//------------------------------------//
/* Randomize the Assessment stim */
var assessment_stim_randomized = shuffle(assessment_stim)


/*Assessment 1*/
var assessment_one_stim = assessment_stim_randomized.slice(0, 40)

/* Remove stim that has already been selected for assessment one */
assessment_stim_randomized = assessment_stim_randomized.filter(val => !assessment_one_stim.includes(val))


/*Assessment 2*/
var assessment_two_stim = assessment_stim_randomized.slice(0, 40)

/* Remove stim that has already been selected for assessment two */
assessment_stim_randomized = assessment_stim_randomized.filter(val => !assessment_two_stim.includes(val))


/*Assessment 3*/
var assessment_three_stim = assessment_stim_randomized.slice(0, 40)


//------------------------------------//
// Randomize Intervention stimuli
//------------------------------------//
/* Randomize the Intervention stim */
var intervention_stim_randomized = shuffle(intervention_stim)


/*Intervention 1*/
var intervention_one_stim = intervention_stim_randomized.slice(0, 20)

/* Remove stim that has already been selected for intervention one */
intervention_stim_randomized = intervention_stim_randomized.filter(val => !intervention_one_stim.includes(val))


/*Intervention 2*/
var intervention_two_stim = intervention_stim_randomized.slice(0, 20)



//------------------------------------//
// Human/AI Task Intro
//------------------------------------//
var aidi_task_intro = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_task_intro",
    stage: "intro"
},
    type: jsPsychInstructions,
    pages: function(){
    pageOne = "<p><div style='line-height: 2; font-size: 5vw;'><b>Welcome!</b></div></p>" +
    "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Given the rise in generative artificial intelligence (AI), it can be hard to tell when content online is generated by a person or by an AI algorithm. </div></p>" +
    '<p><div style ="line-height: 1.25; font-size:2.5vw;">Today, we need your assistance in judging whether AirBnb-style rental listings are "real" (created by a real human), or "fake" (generated by AI).  </div></p>' +
    "<br><p><div style ='line-height: 1.25; font-size:2.5vw;'>Click <b>Next</b> to begin.</div></p>"
     return [pageOne]
  },
  show_clickable_nav: true
}


                                                      //---------------------//
                                                      // Baseline Procedure
                                                      //---------------------//

//------------------------------------//
// Baseline Assessment Instructions
//------------------------------------//
var aidi_baseline_assessment_instructions = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_baseline_assessment_instructions",
    stage: "baseline"
},
    type: jsPsychInstructions,
    pages: function(){
      pageOne =  "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Next, you will see human- and AI-generated rental listings.</div></p>" +
      "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Your goal is to determine whether the rental listing was generated by a human or AI.</div></p>" +
      "<p><div style ='font-size:2.5vw; line-height: 1.25;'>Some listings will have text, and others will include text and images.</div></p>" +
      "<p><div style ='font-size:2.5vw; line-height: 1.25;'>All information presented in each listing comes from</div></p>" +
      "<p><div style ='font-size:2.5vw; line-height: 1.25;'><b>one source</b> - either all from AI, or all human-generated.</div></p>"
     return [pageOne]
  },
  show_clickable_nav: true
}


//---------------------------------------------//
// Baseline Assessment -- Trials
//---------------------------------------------//
var aidi_baseline_assessment_trials = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_baseline_assessment_trials",
    stage: "baseline",
    rental_company: function () {
      return `${jsPsych.evaluateTimelineVariable('rental_company')}`
    },
    city: function () {
      return `${jsPsych.evaluateTimelineVariable('city')}`
    },
    text_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('text_prompt')}`
    },
    text_stimuli_title: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli (title)')}`
    },
    text_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli')}`
    },
    text_type: function () {
      return `${jsPsych.evaluateTimelineVariable('text_type')}`
    },
    text_WC: function () {
      return `${jsPsych.evaluateTimelineVariable('text_word_count')}`
    },
    gAI_system_texts: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_texts')}`
    },
    reword: function () {
      return `${jsPsych.evaluateTimelineVariable('reword')}`
    },
    place_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('place_prompt')}`
    },
    image_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('image_prompt')}`
    },
    place_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('place_stimuli')}`
    },
    place_type: function () {
      return `${jsPsych.evaluateTimelineVariable('place_type')}`
    },
    gAI_system_images: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_images')}`
    },
    face_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('face_stimuli')}`
    },
    face_type: function () {
      return `${jsPsych.evaluateTimelineVariable('face_type')}`
    },
    gAI_system_faces: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_faces')}`
    },
    ai_score: function () {
      return `${jsPsych.evaluateTimelineVariable('ai_score')}`
    },
    listing_type: function () {
      return `${jsPsych.evaluateTimelineVariable('listing_type')}`
    }
  },
  type: jsPsychHtmlButtonResponse,
  stimulus: () => {
    return `<img src="study_design_images/airbnb_scheme_interface.png" <div style= "position:fixed; width: 59vw; height: 84vh; left: 21.5vw; top: 0vh;"></img>` +
      `<img src="${jsPsych.evaluateTimelineVariable('place_stimuli')}" <div style= "position:fixed; width: 25vw; height: 35vh; left: 53vw; top: 15vh;"></img>` +
      `<img src="${jsPsych.evaluateTimelineVariable('face_stimuli')}" <div style= "position:fixed; width: 13vw; height: 23vh; left: 28.8vw; top: 25vh;"></img>` +
      `<p><div style ='font-size: 1.67vw; font-family: Arial; text-align: left; width: 55vw; height: 30vh; position: fixed; left: 23vw; bottom: 15vh; line-height: 1.2em; border: .3vw solid transparent; border-radius: 1vw; padding: 1vh;'>${jsPsych.evaluateTimelineVariable('text_stimuli')}</p>`
  },
  choices: ["<p style ='font-size:2vw; color: black; position: fixed; left: 38vw; bottom: 2vh;'><b>Human</b></p>", "<p style ='font-size: 2vw; color: black; position: fixed; right: 41vw; bottom: 2vh'><b>AI</b></p>"],
  button_html: (choice) => {
    return `<button class="jspsych-btn" style="width: 15vw; height: 8vh; position: relative; top: 41vh;">${choice}</button>`
    },
    on_finish: function (data) {
        if (data.response == 0) {
            ppt_response = "Human"
        }

        if (data.response == 1) {
            ppt_response = "AI"
        }
        //Add a column called "response_category" that stores the value in the "ppt_response" variable
        data.response_category = ppt_response

        if(data.response_category == jsPsych.evaluateTimelineVariable('listing_type')){
          correct = 1
        }

        if(data.response_category != jsPsych.evaluateTimelineVariable('listing_type')){
          correct = 0
        }
        //Add a column called "correct_response" that stores the value in the "correct" variable
        data.correct_response = correct
  }
}


//------------------------------------//
// Baseline Assessment Procedure
//------------------------------------//
var aidi_baseline_assessment_procedure = {
    timeline: [aidi_baseline_assessment_trials],
    timeline_variables: assessment_one_stim,
    };


//------------------------------------//
// Baseline Assessment Conclusion
//------------------------------------//
var aidi_baseline_assessment_conclusion = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_baseline_assessment_conclusion",
    stage: "baseline"
},
  type: jsPsychInstructions,
  pages: function(){
    pageOne =  "<p><div style ='font-size:5vw;'>Great work.</div></p>"+
    '<br><p><div style ="font-size:2.5vw;">Click <b>Next</b> to continue to Part 2.</div></p>' 
   return [pageOne]
},
show_clickable_nav: true
}


//------------------------------------//
// *****Baseline Procedure*****
//------------------------------------//
var aidi_baseline = {
  timeline: [aidi_baseline_assessment_instructions, aidi_baseline_assessment_procedure, aidi_baseline_assessment_conclusion],
  };



                                                      //---------------------//
                                                      // Intervention 1
                                                      //---------------------//

//---------------------------------------------------//
// Intervention 1 Instructions - Training by Examples
//---------------------------------------------------//
var aidi_intervention1_instructions = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_intervention1_instructions",
    stage: "intervention_one"
},
    type: jsPsychInstructions,
    pages: function(){
      pageOne =  "<p><div style ='line-height: 1.25; font-size:2.5vw;'>We are interested to see if we can improve your ability to detect</div></p>" +
      "<p><div style ='line-height: 1.25; font-size:2.5vw;'>whether the listings are generated by a human and AI.</div></p>" +
      "<p><div style ='line-height: 1.25; font-size:2.5vw;'>To do this, we will show you examples of AI- and human-generated listings.</div></p>" +
      '<p><div style ="line-height: 1.25; font-size:2.5vw;">Please click <b>Next</b> to see example listings.</div></p>' 
     return [pageOne]
  },
  show_clickable_nav: true
}


//---------------------------------------------//
// Intervention 1 -- Training Exemplars
//---------------------------------------------//
var aidi_intervention1_training_exemplars = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  on_load(params) {
    var button = document.getElementById("jspsych-html-button-response-btngroup");
    button.style.visibility = "hidden";
    setTimeout(function() {
    button.style.visibility = "visible";
    }, 2000);
},
data: {
  trial_id: "aidi_intervention1_training_exemplars",
  stage: "intervention_one",
  rental_company: function () {
    return `${jsPsych.evaluateTimelineVariable('rental_company')}`
  },
  city: function () {
    return `${jsPsych.evaluateTimelineVariable('city')}`
  },
  text_prompt: function () {
    return `${jsPsych.evaluateTimelineVariable('text_prompt')}`
  },
  text_stimuli_title: function () {
    return `${jsPsych.evaluateTimelineVariable('text_stimuli (title)')}`
  },
  text_stimuli: function () {
    return `${jsPsych.evaluateTimelineVariable('text_stimuli')}`
  },
  text_type: function () {
    return `${jsPsych.evaluateTimelineVariable('text_type')}`
  },
  text_WC: function () {
    return `${jsPsych.evaluateTimelineVariable('text_word_count')}`
  },
  gAI_system_texts: function () {
    return `${jsPsych.evaluateTimelineVariable('gAI_system_texts')}`
  },
  reword: function () {
    return `${jsPsych.evaluateTimelineVariable('reword')}`
  },
  place_prompt: function () {
    return `${jsPsych.evaluateTimelineVariable('place_prompt')}`
  },
  image_prompt: function () {
    return `${jsPsych.evaluateTimelineVariable('image_prompt')}`
  },
  place_stimuli: function () {
    return `${jsPsych.evaluateTimelineVariable('place_stimuli')}`
  },
  place_type: function () {
    return `${jsPsych.evaluateTimelineVariable('place_type')}`
  },
  gAI_system_images: function () {
    return `${jsPsych.evaluateTimelineVariable('gAI_system_images')}`
  },
  face_stimuli: function () {
    return `${jsPsych.evaluateTimelineVariable('face_stimuli')}`
  },
  face_type: function () {
    return `${jsPsych.evaluateTimelineVariable('face_type')}`
  },
  gAI_system_faces: function () {
    return `${jsPsych.evaluateTimelineVariable('gAI_system_faces')}`
  },
  ai_score: function () {
    return `${jsPsych.evaluateTimelineVariable('ai_score')}`
  },
  listing_type: function () {
    return `${jsPsych.evaluateTimelineVariable('listing_type')}`
  }
},
  type: jsPsychHtmlButtonResponse,
  stimulus: () => {
    return `<img src="study_design_images/airbnb_scheme_interface.png" <div style= "position:fixed; width: 59vw; height: 84vh; left: 21.5vw; top: 0vh;"></img>` +
      `<img src="${jsPsych.evaluateTimelineVariable('place_stimuli')}" <div style= "position:fixed; width: 25vw; height: 35vh; left: 53vw; top: 15vh;"></img>` +
      `<img src="${jsPsych.evaluateTimelineVariable('face_stimuli')}" <div style= "position:fixed; width: 13vw; height: 23vh; left: 28.8vw; top: 25vh;"></img>` +
      `<p><div style ='font-size: 1.67vw; font-family: Arial; text-align: left; width: 55vw; height: 30vh; position: fixed; left: 23vw; bottom: 15vh; line-height: 1.2em; border: .3vw transparent; border-radius: 1vw; padding: 1vh;'>${jsPsych.evaluateTimelineVariable('text_stimuli')}</p>` +
      `<p><div style ='font-size: 3vw; font-family: Arial; text-align: center; width: 51vw; height: 8vh; position: fixed; left: 25vw; bottom: 4vh; line-height: 1.5em; border: .3vw transparent; padding: .5vh'>This listing was <b>${jsPsych.evaluateTimelineVariable('listing_type')}-generated</b></p>`
  },
  choices: ["<p style ='font-size:2vw; color: black; position: fixed; left: 87vw; bottom: 2.7vh;'><b>Next</b></p>"],
  button_html: (choice) => {
    return `<button class="jspsych-btn" style="width: 8vw; height: 8vh; position: fixed; left: 85vw; bottom: 4vh;">${choice}</button>`
    }
  }

//---------------------------------------------//
// Intervention 1 -- Training Exemplars Procedure
//---------------------------------------------//
var aidi_intervention1_training_exemplars_procedure = {
    timeline: [aidi_intervention1_training_exemplars],
    timeline_variables: intervention_one_stim,
    };



//-------------------------------//
// *****Intervention 1*****
//-------------------------------//
var aidi_intervention1 = {
  timeline: [aidi_intervention1_instructions, aidi_intervention1_training_exemplars_procedure],
  };




                                                      //-----------------//
                                                      // Assessment 2
                                                      //-----------------//


//--------------------------------------------//
// Assessment 2 Instructions 
//--------------------------------------------//
var aidi_assessment2_instructions = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_assessment2_instructions",
    stage: "assessment_two"
},
    type: jsPsychInstructions,
    pages: function(){
      pageOne =  "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Next, you will see new human- and AI-generated rental listings.</div></p>" +
      "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Your goal is to determine whether the rental listing</div></p>" +
      "<p><div style ='line-height: 1.25; font-size:2.5vw;'>was generated by a human or AI.</div></p>" +
      '<p><div style ="line-height: 1.25; font-size:2.5vw;">Please click <b>Next</b> when you are ready to begin.</div></p>' 
   
     return [pageOne]
  },
  show_clickable_nav: true
}


//---------------------------------------//
// Assessment 2
//---------------------------------------//
var aidi_assessment2_trials = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_assessment2_trials",
    stage: "assessment_two",
    rental_company: function () {
      return `${jsPsych.evaluateTimelineVariable('rental_company')}`
    },
    city: function () {
      return `${jsPsych.evaluateTimelineVariable('city')}`
    },
    text_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('text_prompt')}`
    },
    text_stimuli_title: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli (title)')}`
    },
    text_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli')}`
    },
    text_type: function () {
      return `${jsPsych.evaluateTimelineVariable('text_type')}`
    },
    text_WC: function () {
      return `${jsPsych.evaluateTimelineVariable('text_word_count')}`
    },
    gAI_system_texts: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_texts')}`
    },
    reword: function () {
      return `${jsPsych.evaluateTimelineVariable('reword')}`
    },
    place_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('place_prompt')}`
    },
    image_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('image_prompt')}`
    },
    place_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('place_stimuli')}`
    },
    place_type: function () {
      return `${jsPsych.evaluateTimelineVariable('place_type')}`
    },
    gAI_system_images: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_images')}`
    },
    face_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('face_stimuli')}`
    },
    face_type: function () {
      return `${jsPsych.evaluateTimelineVariable('face_type')}`
    },
    gAI_system_faces: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_faces')}`
    },
    ai_score: function () {
      return `${jsPsych.evaluateTimelineVariable('ai_score')}`
    },
    listing_type: function () {
      return `${jsPsych.evaluateTimelineVariable('listing_type')}`
    }
},
type: jsPsychHtmlButtonResponse,
stimulus: () => {
  return `<img src="study_design_images/airbnb_scheme_interface.png" <div style= "position:fixed; width: 59vw; height: 84vh; left: 21.5vw; top: 0vh;"></img>` +
    `<img src="${jsPsych.evaluateTimelineVariable('place_stimuli')}" <div style= "position:fixed; width: 25vw; height: 35vh; left: 53vw; top: 15vh;"></img>` +
    `<img src="${jsPsych.evaluateTimelineVariable('face_stimuli')}" <div style= "position:fixed; width: 13vw; height: 23vh; left: 28.8vw; top: 25vh;"></img>` +
    `<p><div style ='font-size: 1.67vw; font-family: Arial; text-align: left; width: 55vw; height: 30vh; position: fixed; left: 23vw; bottom: 15vh; line-height: 1.2em; border: .3vw solid transparent; border-radius: 1vw; padding: 1vh;'>${jsPsych.evaluateTimelineVariable('text_stimuli')}</p>`
},
choices: ["<p style ='font-size:2vw; color: black; position: fixed; left: 38vw; bottom: 2vh;'><b>Human</b></p>", "<p style ='font-size: 2vw; color: black; position: fixed; right: 41vw; bottom: 2vh'><b>AI</b></p>"],
button_html: (choice) => {
  return `<button class="jspsych-btn" style="width: 15vw; height: 8vh; position: relative; top: 41vh;">${choice}</button>`
  },
  on_finish: function (data) {
      if (data.response == 0) {
          ppt_response = "Human"
      }

      if (data.response == 1) {
          ppt_response = "AI"
      }
      //Add a column called "response_category" that stores the value in the "ppt_response" variable
      data.response_category = ppt_response

      if(data.response_category == jsPsych.evaluateTimelineVariable('listing_type')){
        correct = 1
      }

      if(data.response_category != jsPsych.evaluateTimelineVariable('listing_type')){
        correct = 0
      }
      //Add a column called "correct_response" that stores the value in the "correct" variable
      data.correct_response = correct
}
}



//------------------------------------------------//
// Assessment 2 Procedure
//------------------------------------------------//
var aidi_assessment2_procedure = {
  timeline: [aidi_assessment2_trials],
  timeline_variables: assessment_two_stim,
  };




//------------------------------------------//
// Assessment 2 Conclusion
//------------------------------------------//
var aidi_assessment2_conclusion = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_assessment2_conclusion",
    stage: "assessment_two"
},
    type: jsPsychInstructions,
    pages: function(){
      pageOne =  "<p><div style ='font-size:5vw;'>Great job!</div></p>"+
      '<br><p><div style ="font-size:2.5vw;">Click <b>Next</b> to continue to Part 3.</div></p>' 
     return [pageOne]
  },
  show_clickable_nav: true
}


//-------------------------------//
// *****Assessment 2*****
//-------------------------------//
var aidi_assessment2 = {
  timeline: [aidi_assessment2_instructions, aidi_assessment2_procedure, aidi_assessment2_conclusion],
  };



                                                      //------------------//
                                                      // Intervention 2
                                                      //------------------//
/*Define "earnings" variable that will be used for intervention 2 (incentivization/feedback)*/
let earnings = 0.00

//------------------------//
// Intervention 2 Intro
//------------------------//
var aidi_intervention2_intro = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_intervention2_intro",
    stage: "intervention_two"
},
    type: jsPsychInstructions,
    pages: function(){
      pageOne =  "<p><div style ='line-height: 1.25; font-size:2.5vw;'>We are interested to see if we can further improve your ability to detect</div></p>" +
      "<p><div style ='line-height: 1.25; font-size:2.5vw;'>whether the listings are generated by a human or AI by using feedback and rewards.</div></p>" +
      '<p><div style ="line-height: 1.25; font-size:2.5vw;">Please click <b>Next</b> to continue.</div></p>' 
     return [pageOne]
  },
  show_clickable_nav: true
}


//--------------------------------------------//
// Intervention 2 Instructions - Feedback & Incentivization
//--------------------------------------------//
var aidi_intervention2_instructions = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_intervention2_instructions",
    stage: "intervention_two"
},
  type: jsPsychInstructions,
  pages: function(){
    pageOne =  "<p><div style ='line-height: 1.25; font-size:2.5vw;'>You will be presented with new listings and asked to indicate whether you think they are generated by a human or AI.</div></p>" +
    '<p><div style ="line-height: 1.25; font-size:2.5vw;">This time, you will be told whether your choice is "Incorrect" or "Correct".</div></p>' +
    "<p><div style ='line-height: 1.25; font-size:2.5vw;'>For every correct choice, you will earn <b>$0.25</b>.</div></p>" +
    '<p><div style ="line-height: 1.25; font-size:2.5vw;">Please click <b>Next</b> when you are ready to begin.</div></p>' 
   return [pageOne]
},
show_clickable_nav: true
}

//---------------------------------------------//
// Intervention 2 -- Feedback & Incentivization
//---------------------------------------------//
var aidi_intervention2_feedback_incentivization = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_intervention2_feedback_incentivization",
    stage: "intervention_two",
    rental_company: function () {
      return `${jsPsych.evaluateTimelineVariable('rental_company')}`
    },
    city: function () {
      return `${jsPsych.evaluateTimelineVariable('city')}`
    },
    text_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('text_prompt')}`
    },
    text_stimuli_title: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli (title)')}`
    },
    text_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli')}`
    },
    text_type: function () {
      return `${jsPsych.evaluateTimelineVariable('text_type')}`
    },
    text_WC: function () {
      return `${jsPsych.evaluateTimelineVariable('text_word_count')}`
    },
    gAI_system_texts: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_texts')}`
    },
    reword: function () {
      return `${jsPsych.evaluateTimelineVariable('reword')}`
    },
    place_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('place_prompt')}`
    },
    image_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('image_prompt')}`
    },
    place_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('place_stimuli')}`
    },
    place_type: function () {
      return `${jsPsych.evaluateTimelineVariable('place_type')}`
    },
    gAI_system_images: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_images')}`
    },
    face_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('face_stimuli')}`
    },
    face_type: function () {
      return `${jsPsych.evaluateTimelineVariable('face_type')}`
    },
    gAI_system_faces: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_faces')}`
    },
    ai_score: function () {
      return `${jsPsych.evaluateTimelineVariable('ai_score')}`
    },
    listing_type: function () {
      return `${jsPsych.evaluateTimelineVariable('listing_type')}`
    }
},
  type: jsPsychHtmlButtonResponse,
  stimulus: () => {
    return `<img src="study_design_images/airbnb_scheme_interface.png" <div style= "position:fixed; width: 59vw; height: 84vh; left: 21.5vw; top: 0vh;"></img>` +
    `<img src="study_design_images/piggybank.png" <div style= "position:fixed; width: 13vw; height: 20vh; left: 1vw; bottom: 0vh;"></img>` +
    `<p><div style ='font-size: 2vw; font-family: Arial; line-height: 1.25em; text-align: center; width: 15vw; height: 9vh; position: fixed; left: 0vw; bottom: 16vh; border: .3vw solid transparent; border-radius: 1vw;'>Total earnings <b>$${earnings}</b></p>` +
    `<img src="${jsPsych.evaluateTimelineVariable('place_stimuli')}" <div style= "position:fixed; width: 25vw; height: 35vh; left: 53vw; top: 15vh;"></img>` +
    `<img src="${jsPsych.evaluateTimelineVariable('face_stimuli')}" <div style= "position:fixed; width: 13vw; height: 23vh; left: 28.8vw; top: 25vh;"></img>` +
    `<p><div style ='font-size: 1.67vw; font-family: Arial; text-align: left; width: 55vw; height: 30vh; position: fixed; left: 23vw; bottom: 15vh; line-height: 1.2em; border: .3vw solid transparent; border-radius: 1vw; padding: 1vh;'>${jsPsych.evaluateTimelineVariable('text_stimuli')}</p>`
  },
  choices: ["<p style ='font-size:2vw; color: black; position: fixed; left: 38vw; bottom: 2vh;'><b>Human</b></p>", "<p style ='font-size: 2vw; color: black; position: fixed; right: 41vw; bottom: 2vh'><b>AI</b></p>"],
  button_html: (choice) => {
    return `<button class="jspsych-btn" style="width: 15vw; height: 8vh; position: relative; top: 41vh;">${choice}</button>`
    },
    on_finish: function (data) {
        if (data.response == 0) {
            ppt_response = "Human"
        }

        if (data.response == 1) {
            ppt_response = "AI"
        }
        //Add a column called "response_category" that stores the value in the "ppt_response" variable
        data.response_category = ppt_response

        if(data.response_category == jsPsych.evaluateTimelineVariable('listing_type')){
          correct = 1
          earnings += 0.25
        }

        if(data.response_category != jsPsych.evaluateTimelineVariable('listing_type')){
          correct = 0
        }
        //Add a column called "correct_response" that stores the value in the "correct" variable
        data.correct_response = correct
  }
}


//---------------------------------------------------------//
// Intervention 2 -- Feedback & Incentivization -- CORRECT
//---------------------------------------------------------//
var aidi_intervention2_correct = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_intervention2_correct",
    stage: "intervention_two"
},
    type: jsPsychHtmlKeyboardResponse,
    stimulus: "<p><div style ='line-height: 1.25; font-size:9vw; color: #3e9c35;'><b>Correct</b></div></p>" +
    // '<img src="study_design_images/dollar_sign.png" style="height: 25vh; position:fixed; left: 50vw; top: 30vh;"></img>' +
    "<p><div style ='line-height: 1.25; font-size:9vw; color: #3e9c35;'><b>$0.25</b></div></p>",
    choices: "NO_KEYS",
    trial_duration: 1000,
};   

var aidi_correct_conditional = {
    timeline: [aidi_intervention2_correct],
    conditional_function: function() {
      if (correct === 1) {
        return true;
      } else {
        return false;
      }
    }
  }

//----------------------------------------------------------//
// Intervention 2 -- Feedback & Incentivization -- INCORRECT
//----------------------------------------------------------//
var aidi_intervention2_incorrect = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_intervention2_incorrect",
    stage: "intervention_two"
},
    type: jsPsychHtmlKeyboardResponse,
    stimulus: "<p><div style ='font-size:9vw; color: red;'><b>Incorrect</b></div></p>",
    // '<img src="study_design_images/red_x.png" style="height: 19vh; position:fixed; left: 45vw; top: 13vh;"></img>',
    choices: "NO_KEYS",
    trial_duration: 1000,
};   

  var aidi_incorrect_conditional = {
    timeline: [aidi_intervention2_incorrect],
    conditional_function: function() {
      if (correct === 0) {
        return true;
      } else {
        return false;
      }
    }
  }

//------------------------------------------------//
// Intervention 2 Procedure
//------------------------------------------------//
var aidi_intervention2_procedure = {
    timeline: [aidi_intervention2_feedback_incentivization, aidi_correct_conditional, aidi_incorrect_conditional],
    timeline_variables: intervention_two_stim,
    };



//-------------------------------//
// *****Intervention 2*****
//-------------------------------//
var aidi_intervention2 = {
  timeline: [aidi_intervention2_intro, aidi_intervention2_instructions, aidi_intervention2_procedure],
  };




                                                      //-----------------//
                                                      // Assessment 3
                                                      //-----------------//


//------------------------------------//
// Assessment 3 Instructions 
//------------------------------------//
var aidi_assessment3_instructions = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_assessment3_instructions",
    stage: "assessment_three"
},
  type: jsPsychInstructions,
  pages: function(){
    pageOne =  "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Now, you will see new human- and AI-generated rental listings.</div></p>" +
    "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Your goal is to determine whether the rental listing</div></p>" +
    "<p><div style ='line-height: 1.25; font-size:2.5vw;'>was generated by a human or AI.</div></p>" +
    "<p><div style ='line-height: 1.25; font-size:2.5vw;'>Please click <b>Next</b> when you are ready to begin.</div></p>" 
 
   return [pageOne]
},
show_clickable_nav: true
}

//---------------------------------------//
// Assessment 3
//---------------------------------------//
var aidi_assessment3_trials = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_assessment3_trials",
    stage: "assessment_three",
    rental_company: function () {
      return `${jsPsych.evaluateTimelineVariable('rental_company')}`
    },
    city: function () {
      return `${jsPsych.evaluateTimelineVariable('city')}`
    },
    text_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('text_prompt')}`
    },
    text_stimuli_title: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli (title)')}`
    },
    text_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('text_stimuli')}`
    },
    text_type: function () {
      return `${jsPsych.evaluateTimelineVariable('text_type')}`
    },
    text_WC: function () {
      return `${jsPsych.evaluateTimelineVariable('text_word_count')}`
    },
    gAI_system_texts: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_texts')}`
    },
    reword: function () {
      return `${jsPsych.evaluateTimelineVariable('reword')}`
    },
    place_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('place_prompt')}`
    },
    image_prompt: function () {
      return `${jsPsych.evaluateTimelineVariable('image_prompt')}`
    },
    place_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('place_stimuli')}`
    },
    place_type: function () {
      return `${jsPsych.evaluateTimelineVariable('place_type')}`
    },
    gAI_system_images: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_images')}`
    },
    face_stimuli: function () {
      return `${jsPsych.evaluateTimelineVariable('face_stimuli')}`
    },
    face_type: function () {
      return `${jsPsych.evaluateTimelineVariable('face_type')}`
    },
    gAI_system_faces: function () {
      return `${jsPsych.evaluateTimelineVariable('gAI_system_faces')}`
    },
    ai_score: function () {
      return `${jsPsych.evaluateTimelineVariable('ai_score')}`
    },
    listing_type: function () {
      return `${jsPsych.evaluateTimelineVariable('listing_type')}`
    }
},
  type: jsPsychHtmlButtonResponse,
  stimulus: () => {
    return `<img src="study_design_images/airbnb_scheme_interface.png" <div style= "position:fixed; width: 59vw; height: 84vh; left: 21.5vw; top: 0vh;"></img>` +
      `<img src="${jsPsych.evaluateTimelineVariable('place_stimuli')}" <div style= "position:fixed; width: 25vw; height: 35vh; left: 53vw; top: 15vh;"></img>` +
      `<img src="${jsPsych.evaluateTimelineVariable('face_stimuli')}" <div style= "position:fixed; width: 13vw; height: 23vh; left: 28.8vw; top: 25vh;"></img>` +
      `<p><div style ='font-size: 1.67vw; font-family: Arial; text-align: left; width: 55vw; height: 30vh; position: fixed; left: 23vw; bottom: 15vh; line-height: 1.2em; border: .3vw solid transparent; border-radius: 1vw; padding: 1vh;'>${jsPsych.evaluateTimelineVariable('text_stimuli')}</p>`
  },
  choices: ["<p style ='font-size:2vw; color: black; position: fixed; left: 38vw; bottom: 2vh;'><b>Human</b></p>", "<p style ='font-size: 2vw; color: black; position: fixed; right: 41vw; bottom: 2vh'><b>AI</b></p>"],
  button_html: (choice) => {
    return `<button class="jspsych-btn" style="width: 15vw; height: 8vh; position: relative; top: 41vh;">${choice}</button>`
    },
    on_finish: function (data) {
        if (data.response == 0) {
            ppt_response = "Human"
        }

        if (data.response == 1) {
            ppt_response = "AI"
        }
        //Add a column called "response_category" that stores the value in the "ppt_response" variable
        data.response_category = ppt_response

        if(data.response_category == jsPsych.evaluateTimelineVariable('listing_type')){
          correct = 1
        }

        if(data.response_category != jsPsych.evaluateTimelineVariable('listing_type')){
          correct = 0
        }
        //Add a column called "correct_response" that stores the value in the "correct" variable
        data.correct_response = correct
  }
}



//------------------------------------------------//
// Assessment 3 Procedure
//------------------------------------------------//
var aidi_assessment3_procedure = {
    timeline: [aidi_assessment3_trials],
    timeline_variables: assessment_three_stim,
    };


//------------------------------------------//
// Assessment 3 Conclusion
//------------------------------------------//
var aidi_assessment3_conclusion = {
  on_start: function() {
    document.body.style.backgroundColor = '#F0F0F0'
},
  data: {
    trial_id: "aidi_assessment3_conclusion",
    stage: "assessment_three"
},
    type: jsPsychInstructions,
    pages: function(){
      pageOne =  "<p><div style ='font-size:5vw;'>Great job.</div></p>"+
      "<br><p><div style ='font-size:2.5vw; line-height: 1.25'>You've completed this task! Please click <b>Next</b> to answer a few questions.</div></p>"
     return [pageOne]
  },
  show_clickable_nav: true
}




//-------------------------------//
// *****Assessment 3*****
//-------------------------------//
var aidi_assessment3 = {
  timeline: [aidi_assessment3_instructions, aidi_assessment3_procedure, aidi_assessment3_conclusion],
  };





//------------------------------------//
// Organize Human/AI Judgment task
//------------------------------------//
var human_ai_task = {
    // timeline: [aidi_task_intro, aidi_baseline, aidi_intervention1, aidi_assessment2, aidi_intervention2, aidi_assessment3]
    timeline: [aidi_intervention2]

};